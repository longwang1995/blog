(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{451:function(t,s,n){"use strict";n.r(s);var e=n(2),a=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"css新特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css新特性"}},[t._v("#")]),t._v(" CSS新特性")]),t._v(" "),s("h2",{attrs:{id:"新css特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新css特性"}},[t._v("#")]),t._v(" 新CSS特性")]),t._v(" "),s("blockquote",[s("p",[t._v("内容可见性"),s("code",[t._v("content-bisibility")]),t._v(",可选值"),s("code",[t._v("visible")]),t._v(" "),s("code",[t._v("auto")]),t._v(" "),s("code",[t._v("hidden")])])]),t._v(" "),s("p",[t._v("一般来说，大多数Web应用都有复杂的UI元素，而且有的内容会在设备可视区域之外（内容超出了用户浏览器可视区域），比如下图中红色区域就在手机设备屏幕可视区域之外：\n"),s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f7ff80b025bb4b5ba3ee8fa8f365b37c~tplv-k3u1fbpfcp-zoom-1.image",alt:"示例"}}),t._v("\n在这种场合下，我们可以使用CSS的content-visibility来跳过屏幕外的内容渲染。也就是说，如果你有大量的离屏内容（Off-screen Content），这将会大幅减少页面渲染时间。\n这个功能是CSS新增的特性，隶属于 W3C 的 CSS Containment Module Level 2 模块。也是对提高渲染性能影响最大的功能之一。content-visibility可以接受visible、auto和hidden三个属性值，但我们可以在一个元素上使用content-visibility:auto来直接的提升页面的渲染性能。")]),t._v(" "),s("p",[t._v("你可以给所有卡片添加content-visibility：")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".card")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("content-visibility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如果浏览器不渲染页面内的一些元素，滚动将是一场噩梦，因为无法正确计算页面高度。这是因为，content-visibility会将分配给它的元素的高度（height）视为0，浏览器在渲染之前会将这个元素的高度变为0，从而使我们的页面高度和滚动变得混乱。但如果已经为元素或其子元素显式设置了高度，那这种行为就会被覆盖。如果你的元素中没显式设置高度，并且因为显式设置height可能会带来一定的副作用而没设置，那么我们可以使用contain-intrinsic-size来确保元素的正确渲染，同时也保留延迟渲染的好处。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".card")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("content-visibility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("contain-intrinsic-size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[s("code",[t._v("scroll-behavior")]),t._v("让滚动更流畅\n"),s("code",[t._v("scroll-behavior")]),t._v("是"),s("a",{attrs:{href:"https://dev.w3.org/csswg/cssom-view/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSSOM View Module提供的一个新特性"),s("OutboundLink")],1),t._v("，可以轻易的帮助我们实现丝滑般的滚动效果。该属性可以为一个滚动框指定滚动行为，其他任何的滚动，例如那些由于用户行为而产生的滚动，不受这个属性的影响。\n"),s("code",[t._v("scroll-behavior")]),t._v("接受两个值：")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("auto")]),t._v("：滚动框立即滚动")]),t._v(" "),s("li",[s("code",[t._v("smooth")]),t._v("：滚动框通过一个用户代理定义的时间段使用定义的时间函数来实现平稳的滚动，用户代理平台应遵循约定，如果有的话")])])])}),[],!1,null,null,null);s.default=a.exports}}]);